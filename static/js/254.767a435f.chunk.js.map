{"version":3,"file":"static/js/254.767a435f.chunk.js","mappings":"6MAgDA,UA3Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,GAASO,MAAK,SAAAC,GACzB,GAAoB,kBAATA,EAAX,CAGA,IAAMC,EAAeD,EAAKE,KACxB,kBAA4C,CAC1CC,GADF,EAAGA,GAEDC,KAFF,EAAOA,KAGLC,UAHF,EAAaA,UAIXC,aAJF,EAAwBA,aAAxB,IAOFV,EAAeK,EATd,CAUF,GACF,GAAE,CAACT,KAGF,wBACGG,EAAYY,OAAS,GACpBZ,EAAYO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACd,2BACE,wBAAKF,IACJE,GACC,gBACEE,IAAG,6CAAwCF,GAC3CG,IAAKL,EACLM,MAAM,WAGR,gBAAKF,IAAKG,EAAOF,IAAI,YAAYC,MAAM,WAEzC,uBAAIL,MAXGF,EADK,KAiBvB,C,6MC1CYS,EAAiB,mCAAG,uMAGNC,EAAAA,EAAAA,IAHM,0GAGvBC,EAHuB,yBAItBA,EAASd,KAAKe,SAJQ,yDAMtBC,EAAAA,GAAAA,MAAY,iBAAZ,OANsB,yDAAH,qDAWjBC,EAAiB,mCAAG,WAAMC,GAAN,gFACzBC,EADyB,mGACyED,EADzE,0CAGNL,EAAAA,EAAAA,IAAUM,GAHJ,cAGvBL,EAHuB,yBAItBA,EAASd,KAAKe,SAJQ,yDAMtBC,EAAAA,GAAAA,MAAY,iBAAZ,OANsB,yDAAH,sDAWjBI,EAAe,mCAAG,WAAMC,GAAN,gFACvBF,EADuB,6CACqBE,EADrB,8EAGJR,EAAAA,EAAAA,IAAUM,GAHN,cAGrBL,EAHqB,yBAIpBA,EAASd,MAJW,yDAMpBgB,EAAAA,GAAAA,MAAY,iBAAZ,OANoB,yDAAH,sDAWflB,EAAY,mCAAG,WAAMuB,GAAN,gFACpBF,EADoB,6CACwBE,EADxB,sFAGDR,EAAAA,EAAAA,IAAUM,GAHT,cAGlBL,EAHkB,yBAIjBA,EAASd,KAAKsB,MAJG,yDAMjBN,EAAAA,GAAAA,MAAY,iBAAZ,OANiB,yDAAH,sDAWZO,EAAc,mCAAG,WAAMF,GAAN,gFACtBF,EADsB,6CACsBE,EADtB,sFAGHR,EAAAA,EAAAA,IAAUM,GAHP,cAGpBL,EAHoB,yBAInBA,EAASd,KAAKe,SAJK,yDAMnBC,EAAAA,GAAAA,MAAY,iBAAZ,OANmB,yDAAH,qD","sources":["pages/MovieDetails/Cast/Cast.jsx","serviceAPI/serviceAPI.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from '../../../serviceAPI/serviceAPI';\nimport image from '../../../components/imageNotFound.jpg';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castDetails, setCastDetails] = useState([]);\n\n  useEffect(() => {\n    getMovieCast(movieId).then(data => {\n      if (typeof data !== 'object') {\n        return;\n      }\n      const filteredData = data.map(\n        ({ id, name, character, profile_path }) => ({\n          id,\n          name,\n          character,\n          profile_path,\n        })\n      );\n      setCastDetails(filteredData);\n    });\n  }, [movieId]);\n\n  return (\n    <ul>\n      {castDetails.length > 0 &&\n        castDetails.map(({ id, name, character, profile_path }) => (\n          <li key={id}>\n            <h3>{name}</h3>\n            {profile_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/original${profile_path}`}\n                alt={name}\n                width=\"100px\"\n              />\n            ) : (\n              <img src={image} alt=\"not found\" width=\"100px\" />\n            )}\n            <p>{character}</p>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\n///////// Trending movies\nexport const getTrendingMovies = async () => {\n  const url = `https://api.themoviedb.org/3/trending/movie/day?api_key=15514698987343768a5fd47afc677b65`;\n  try {\n    const response = await axios.get(url);\n    return response.data.results;\n  } catch (error) {\n    return toast.error('Error occurred', error);\n  }\n};\n\n///////// Movies finder\nexport const getSearchedMovies = async query => {\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=15514698987343768a5fd47afc677b65&query=${query}&include_adult=false`;\n  try {\n    const response = await axios.get(url);\n    return response.data.results;\n  } catch (error) {\n    return toast.error('Error occurred', error);\n  }\n};\n\n///////// Movie details\nexport const getMovieDetails = async movieID => {\n  const url = `https://api.themoviedb.org/3/movie/${movieID}?api_key=15514698987343768a5fd47afc677b65&language=en-US`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    return toast.error('Error occurred', error);\n  }\n};\n\n///////// Movie cast\nexport const getMovieCast = async movieID => {\n  const url = `https://api.themoviedb.org/3/movie/${movieID}/credits?api_key=15514698987343768a5fd47afc677b65&language=en-US`;\n  try {\n    const response = await axios.get(url);\n    return response.data.cast;\n  } catch (error) {\n    return toast.error('Error occurred', error);\n  }\n};\n\n///////// Movie review\nexport const getMovieReview = async movieID => {\n  const url = `https://api.themoviedb.org/3/movie/${movieID}/reviews?api_key=15514698987343768a5fd47afc677b65&language=en-US`;\n  try {\n    const response = await axios.get(url);\n    return response.data.results;\n  } catch (error) {\n    return toast.error('Error occurred', error);\n  }\n};\n"],"names":["movieId","useParams","useState","castDetails","setCastDetails","useEffect","getMovieCast","then","data","filteredData","map","id","name","character","profile_path","length","src","alt","width","image","getTrendingMovies","axios","response","results","toast","getSearchedMovies","query","url","getMovieDetails","movieID","cast","getMovieReview"],"sourceRoot":""}