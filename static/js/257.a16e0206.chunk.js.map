{"version":3,"file":"static/js/257.a16e0206.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","serviceAPI/serviceAPI.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const GoBackBtn = styled(Link)`\n  margin: 24px;\n  line-height: 2.5;\n  font-size: 20px;\n  font-weight: 700;\n  text-decoration: none;\n  color: grey;\n  padding: 2px;\n  background-color: rgb(243, 255, 254);\n  box-shadow: 0px 1px 2px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  :hover {\n    color: red;\n  }\n`;\n\nexport const MovieBox = styled.div`\n  display: flex;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\nexport const MovieImg = styled.img`\n  margin: 10px;\n  object-fit: contain;\n\n  }\n`;\n\nexport const MovieDetailsBox = styled.div`\n  padding: 10px;\n`;\n\nexport const GenresList = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: flex;\n`;\nexport const GenresListItem = styled.li`\n  padding-left: 12px;\n  &:first-child {\n    padding-left: 0px;\n  }\n`;\n\nexport const MovieInfoBox = styled.div`\n  padding: 10px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const InfoList = styled.ul`\n  font-size: 18px;\n  font-weight: 500;\n  padding-left: 10px;\n  list-style: none;\n`;\n\nexport const InfoListLink = styled(Link)`\n  text-decoration: none;\n  :hover {\n    color: red;\n  }\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from '../../serviceAPI/serviceAPI';\nimport {\n  GoBackBtn,\n  MovieDetailsBox,\n  MovieBox,\n  GenresList,\n  MovieImg,\n  GenresListItem,\n  MovieInfoBox,\n  InfoList,\n  InfoListLink,\n} from './MovieDetails.styled';\nimport image from '../../components/imageNotFound.jpg';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieCard, setMovieCard] = useState(null);\n  const location = useLocation();\n  useEffect(() => {\n    getMovieDetails(Number(movieId)).then(data => {\n      if (typeof data !== 'object') {\n        return;\n      }\n\n      setMovieCard(data);\n    });\n  }, [movieId]);\n\n  if (!movieCard) {\n    return null;\n  }\n\n  const { title, vote_average, poster_path, overview, genres } = movieCard;\n\n  const linkItemConfig = [\n    { to: 'cast', name: 'Cast' },\n    { to: 'reviews', name: 'Reviews' },\n  ];\n\n  return (\n    <main>\n      <GoBackBtn to={location.state?.from ?? '/movies'}> ðŸ¡° Go back</GoBackBtn>\n      <MovieBox>\n        {poster_path ? (\n          <MovieImg\n            src={`https://image.tmdb.org/t/p/original${poster_path}`}\n            alt={title}\n            width=\"240px\"\n          />\n        ) : (\n          <MovieImg src={image} alt=\"not found\" width=\"240px\" />\n        )}\n        <MovieDetailsBox>\n          <h2>{title}</h2>\n          <p>User score: {Math.round(vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <GenresList>\n            {genres.map(({ id, name }) => (\n              <GenresListItem key={id}>{name}</GenresListItem>\n            ))}\n          </GenresList>\n        </MovieDetailsBox>\n      </MovieBox>\n\n      <MovieInfoBox>\n        <h4>Additional information:</h4>\n        <InfoList>\n          {linkItemConfig.map(({ to, name }) => (\n            <li key={to}>\n              <InfoListLink to={to} state={{ from: location.state?.from }}>\n                {name}\n              </InfoListLink>\n            </li>\n          ))}\n        </InfoList>\n      </MovieInfoBox>\n      <Suspense fallback={<p>Details is Loading...</p>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\n///////// Trending movies\nexport const getTrendingMovies = async () => {\n  const url = `https://api.themoviedb.org/3/trending/movie/day?api_key=15514698987343768a5fd47afc677b65`;\n  try {\n    const response = await axios.get(url);\n    return response.data.results;\n  } catch (error) {\n    return toast.error('Error occurred', error);\n  }\n};\n\n///////// Movies finder\nexport const getSearchedMovies = async query => {\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=15514698987343768a5fd47afc677b65&query=${query}&include_adult=false`;\n  try {\n    const response = await axios.get(url);\n    return response.data.results;\n  } catch (error) {\n    return toast.error('Error occurred', error);\n  }\n};\n\n///////// Movie details\nexport const getMovieDetails = async movieID => {\n  const url = `https://api.themoviedb.org/3/movie/${movieID}?api_key=15514698987343768a5fd47afc677b65&language=en-US`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    return toast.error('Error occurred', error);\n  }\n};\n\n///////// Movie cast\nexport const getMovieCast = async movieID => {\n  const url = `https://api.themoviedb.org/3/movie/${movieID}/credits?api_key=15514698987343768a5fd47afc677b65&language=en-US`;\n  try {\n    const response = await axios.get(url);\n    return response.data.cast;\n  } catch (error) {\n    return toast.error('Error occurred', error);\n  }\n};\n\n///////// Movie review\nexport const getMovieReview = async movieID => {\n  const url = `https://api.themoviedb.org/3/movie/${movieID}/reviews?api_key=15514698987343768a5fd47afc677b65&language=en-US`;\n  try {\n    const response = await axios.get(url);\n    return response.data.results;\n  } catch (error) {\n    return toast.error('Error occurred', error);\n  }\n};\n"],"names":["GoBackBtn","styled","Link","MovieBox","MovieImg","MovieDetailsBox","GenresList","GenresListItem","MovieInfoBox","InfoList","InfoListLink","movieId","useParams","useState","movieCard","setMovieCard","location","useLocation","useEffect","getMovieDetails","Number","then","data","title","vote_average","poster_path","overview","genres","to","state","from","src","alt","width","image","Math","round","map","id","name","Suspense","fallback","getTrendingMovies","axios","response","results","toast","getSearchedMovies","query","url","movieID","getMovieCast","cast","getMovieReview"],"sourceRoot":""}