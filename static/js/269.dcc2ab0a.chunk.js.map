{"version":3,"file":"static/js/269.dcc2ab0a.chunk.js","mappings":"mMAoCA,UAhCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0CE,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeN,GAASO,MAAK,SAAAC,GAC3B,GAAoB,kBAATA,EAAX,CAGA,IAAMC,EAAeD,EAAKE,KAAI,kBAA8B,CAC1DC,GAD4B,EAAGA,GAE/BC,OAF4B,EAAOA,OAGnCC,QAH4B,EAAeA,QAAf,IAK9BT,EAAiBK,EANhB,CAOF,GACF,GAAE,CAACT,KAGF,wBAC4B,IAAzBG,EAAcW,OACXX,EAAcO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAChB,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EADO,IAMlB,6CAGT,C,6MC9BYI,EAAiB,mCAAG,uMAGNC,EAAAA,EAAAA,IAHM,0GAGvBC,EAHuB,yBAItBA,EAAST,KAAKU,SAJQ,yDAMtBC,EAAAA,GAAAA,MAAY,iBAAZ,OANsB,yDAAH,qDAWjBC,EAAiB,mCAAG,WAAMC,GAAN,gFACzBC,EADyB,mGACyED,EADzE,0CAGNL,EAAAA,EAAAA,IAAUM,GAHJ,cAGvBL,EAHuB,yBAItBA,EAAST,KAAKU,SAJQ,yDAMtBC,EAAAA,GAAAA,MAAY,iBAAZ,OANsB,yDAAH,sDAWjBI,EAAe,mCAAG,WAAMC,GAAN,gFACvBF,EADuB,6CACqBE,EADrB,8EAGJR,EAAAA,EAAAA,IAAUM,GAHN,cAGrBL,EAHqB,yBAIpBA,EAAST,MAJW,yDAMpBW,EAAAA,GAAAA,MAAY,iBAAZ,OANoB,yDAAH,sDAWfM,EAAY,mCAAG,WAAMD,GAAN,gFACpBF,EADoB,6CACwBE,EADxB,sFAGDR,EAAAA,EAAAA,IAAUM,GAHT,cAGlBL,EAHkB,yBAIjBA,EAAST,KAAKkB,MAJG,yDAMjBP,EAAAA,GAAAA,MAAY,iBAAZ,OANiB,yDAAH,sDAWZb,EAAc,mCAAG,WAAMkB,GAAN,gFACtBF,EADsB,6CACsBE,EADtB,sFAGHR,EAAAA,EAAAA,IAAUM,GAHP,cAGpBL,EAHoB,yBAInBA,EAAST,KAAKU,SAJK,yDAMnBC,EAAAA,GAAAA,MAAY,iBAAZ,OANmB,yDAAH,qD","sources":["pages/MovieDetails/Reviews/Reviews.jsx","serviceAPI/serviceAPI.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReview } from '../../../serviceAPI/serviceAPI';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewDetails, setReviewDetails] = useState([]);\n\n  useEffect(() => {\n    getMovieReview(movieId).then(data => {\n      if (typeof data !== 'object') {\n        return;\n      }\n      const filteredData = data.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }));\n      setReviewDetails(filteredData);\n    });\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviewDetails.length !== 0\n        ? reviewDetails.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </li>\n          ))\n        : \"We don't have any reviews for this movie.\"}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\n///////// Trending movies\nexport const getTrendingMovies = async () => {\n  const url = `https://api.themoviedb.org/3/trending/movie/day?api_key=15514698987343768a5fd47afc677b65`;\n  try {\n    const response = await axios.get(url);\n    return response.data.results;\n  } catch (error) {\n    return toast.error('Error occurred', error);\n  }\n};\n\n///////// Movies finder\nexport const getSearchedMovies = async query => {\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=15514698987343768a5fd47afc677b65&query=${query}&include_adult=false`;\n  try {\n    const response = await axios.get(url);\n    return response.data.results;\n  } catch (error) {\n    return toast.error('Error occurred', error);\n  }\n};\n\n///////// Movie details\nexport const getMovieDetails = async movieID => {\n  const url = `https://api.themoviedb.org/3/movie/${movieID}?api_key=15514698987343768a5fd47afc677b65&language=en-US`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    return toast.error('Error occurred', error);\n  }\n};\n\n///////// Movie cast\nexport const getMovieCast = async movieID => {\n  const url = `https://api.themoviedb.org/3/movie/${movieID}/credits?api_key=15514698987343768a5fd47afc677b65&language=en-US`;\n  try {\n    const response = await axios.get(url);\n    return response.data.cast;\n  } catch (error) {\n    return toast.error('Error occurred', error);\n  }\n};\n\n///////// Movie review\nexport const getMovieReview = async movieID => {\n  const url = `https://api.themoviedb.org/3/movie/${movieID}/reviews?api_key=15514698987343768a5fd47afc677b65&language=en-US`;\n  try {\n    const response = await axios.get(url);\n    return response.data.results;\n  } catch (error) {\n    return toast.error('Error occurred', error);\n  }\n};\n"],"names":["movieId","useParams","useState","reviewDetails","setReviewDetails","useEffect","getMovieReview","then","data","filteredData","map","id","author","content","length","getTrendingMovies","axios","response","results","toast","getSearchedMovies","query","url","getMovieDetails","movieID","getMovieCast","cast"],"sourceRoot":""}